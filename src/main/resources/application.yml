# 내 블로그 프로젝트에 진입하기 직전에 해당 파일을 한 번 읽고 시작을 하게 된다.
server:
  # 내 포트 안에 context를 설정함.
  port: 8000
  servlet:
    # 내 프로젝트에 들어가기 위한 진입점
    context-path: /blog

# 위의 코드 부분을 적지않으면 아래에 해당하는 코드가 자동으로 실행되는거나 마찬가지임.
#server:
#  port: 8080
#  servlet:
#    context-path: /

spring:
  mvc:
    view:
      prefix: /WEB-INF/views/
      suffix: .jsp
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    # 데이터베이스 명
    url: jdbc:mysql://localhost:3306/blog?serverTimezone=Asia/Seoul
    username: cos
    password: 1234
  jpa:
    hibernate:
      # 내가 기존에 User라는 테이블이 있어도, 프로젝트를 재실행할 때마다 테이블을 새로 만들겠다.
      # 데이터베이스는 그대로 남는다.
      ddl-auto: update
      naming:
        # 카멜 표기법을 언더바를 붙이는 변수 표기법으로 바꿔주겠다.
#        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
      # 테이블을 만들 때 변수명 그대로 테이블의 필드로 만들어주겠다.
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        # JPA가 사용하는 기본 넘버링 전략을 따라가지 않겠다.
      use-new-id-generator-mappings: false
    open-in-view: true
    # 콘솔창에 DB 생성 정보가 보이도록
    show-sql: true
    # 콘솔창에 DB 생성 정보가 줄바꿈이 되어 깔끔하게 보이도록 하겠다.
    properties:
      hibernate:
        format_sql: true
  devtools:
    livereload:
      enabled: false

